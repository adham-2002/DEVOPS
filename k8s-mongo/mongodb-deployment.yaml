apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: kubeshop
data:
  MONGO_URI: "mongodb://adham:adham2002@mongodb:27017/ecommerce?authSource=ecommerce"
  JWT_SECRET: "adhamsomethingsecret"
  REDIS_HOST: "redis"
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secrets
  namespace: kubeshop
type: Opaque
stringData:
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_INITDB_ROOT_PASSWORD: root2002
  MONGO_INITDB_DATABASE: ecommerce
  MONGO_APP_USER: adham
  MONGO_APP_PASS: adham2002
#! You can list all secrets: kubectl get secrets -n kubeshop
#! View all secret details: kubectl get secret mongo-secrets -n kubeshop -o yaml
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: kubeshop
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
#! Note: Minikube automatically creates a PersistentVolume for us
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: kubeshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_DATABASE
        - name: MONGO_APP_USER
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_APP_USER
        - name: MONGO_APP_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_APP_PASS
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        - name: mongo-init-script
          mountPath: /docker-entrypoint-initdb.d

      - name: mongo-express
        image: mongo-express:latest
        ports:
        - containerPort: 8081  # Mongo-Express UI on port 8081
        env:
        - name: ME_CONFIG_MONGODB_SERVER
          value: "mongodb" 
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_USERNAME
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_PASSWORD
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-pvc
      - name: mongo-init-script
        configMap:
          name: mongo-init-script
#! Note: The username/password for Mongo Express is admin / pass
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: kubeshop
spec:
  selector:
    app: mongodb
  ports:
    - name: mongo
      protocol: TCP
      port: 27017
      targetPort: 27017
    - name: mongo-express
      protocol: TCP
      port: 8081
      targetPort: 8081
